version: '3'
services:
  users:
    build: https://github.com/dankolbman/stoic-users.git
    environment:
      - FLASK_CONFIG=production
      - FLASK_DEBUG
      - SECRET_KEY 
      - SSL_DISABLE
      - SQLALCHEMY_DATABASE_URI=postgres://postgres:psql@postgres:5432/stoic
    command: ./manage.py runserver -h 0.0.0.0 -p 5000
    ports:
      - "5000:5000"
    links:
      - "pg:postgres"
  geo:
    build: https://github.com/dankolbman/stoic-geo.git
    environment:
      - FLASK_CONFIG=production
      - FLASK_DEBUG
      - SECRET_KEY 
      - SSL_DISABLE
      - CASSANDRA_HOSTS=cassandra
    depends_on:
      - "cassandra"
      - "redis"
    command: ["./wait-for-it.sh", "cassandra:9042", "--", "./manage.py", "runserver", "-h", "0.0.0.0", "-p", "5001"]
    restart: always
    ports:
      - "5001:5001"
    links:
      - "cassandra:cassandra"
      - "redis:redis"
  celery:
    environment:
      - FLASK_CONFIG=production
      - FLASK_DEBUG
      - SECRET_KEY
      - SSL_DISABLE
      - CASSANDRA_HOSTS=cassandra
      - CELERY_BROKER_URL='redis://redis:6379/0'
      - CELERY_BACKEND='redis://redis:6379/0'
      - CELERY_RESULT_BACKEND='redis://redis:6379/0'
      - CSV_UPLOAD_DIR=.
      - MAX_CONTENT_LENGTH=9999999999
    build: https://github.com/dankolbman/stoic-geo.git
    command: ["./wait-for-it.sh", "redis:6379", "--", "celery", "worker", "-l", "info", "-A", "geo.tasks.csv"]
    depends_on:
      - "redis"
    links:
      - "cassandra:cassandra"
      - "redis:redis"
  pg:
    image: postgres:9.6
    environment:
      POSTGRES_DB: stoic
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: psql
  redis:
    image: redis:3.2
  cassandra:
    image: cassandra:3.10
